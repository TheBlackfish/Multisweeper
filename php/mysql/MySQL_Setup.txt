An Explanation of how the MySQL schema should be set up.

Tables:

*games

	A table containing each game's data in terms of the minefield layout, visibility, etc.
	Fields:
		gameID (Double)
			Primary key. Auto-increments.
		map (String)
			A string that denotes the minefield layout. Should contain a number of characters equal to height * width.
		visibility (String)
			A string that denotes visibility of the map. Should contain a number of characters equal to height * width.
		height (int)
			A integer that denotes the height of the minefield in the game.
		width (int)
			A integer that denotes the width of the minefield in the game.
		status (String)
			A string that denotes the current status of the game.

*players

	A table with all player information.
	Fields:
		playerID (Double)
			The ID of the player this corresponds to.
		username (String)
			The display name of the player.
		password (String)
			The password of the player they use to log in.

*playerStatus

	A table corresponding to games & players.
	Fields:
		gameID (Double)
			Foreign key referring to the current game this status refers to.
		playerID (Double)
			Foreign key referring to the current player playing the game.
		status (int)
			Refers to the current status of the player. 1 for alive, 0 for dead.
		awaitingSubmission (bool)
			False if the player has not submitted an action yet, true if they have.

*actionQueue

	A table corresponding to player actions submitted to the game
	Fields:
		gameID (Double)
			Foreign key referring to the current game this status refers to.
		playerID (Double)
			Foreign key referring to the current player playing the game.
		actionType (int)
			0 for shovel, 1 for flag
		xCoord (int)
			The x coordinate on the map of where to perform the action.
		yCoord (int)
			The y coordinate on the map of where to perform the action.

*upcomingSignUp

	A table corresponding to all players who wish to sign up for the next game.
	Fields:
		playerID (Double)
			Foreign key referring to the player attempting to sign up.

*globalVars

	A table containing unique key-value pairs that are unique to the whole Multisweeper server instance, such as when the next game is being made.
	Fields:
		key (Varchar)
			A unique string identifying the key for the key-value pair.
		value (Varchar)
			The value currently associated with the key.